name: Model Registry CI

on:
  push:
    paths:
      - 'brixa/ai/registry/**'
      - 'tests/ai/registry/**'
      - '.github/workflows/model-registry-ci.yml'
  pull_request:
    paths:
      - 'brixa/ai/registry/**'
      - 'tests/ai/registry/**'
      - '.github/workflows/model-registry-ci.yml'

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        exclude:
          # Skip Python 3.8 on Windows due to torch compatibility issues
          - os: windows-latest
            python-version: '3.8'

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
        pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
    
    - name: Lint with flake8
      run: |
        pip install flake8 black isort mypy
        flake8 brixa/ai/registry tests/ai/registry
        black --check brixa/ai/registry tests/ai/registry
        isort --check-only brixa/ai/registry tests/ai/registry
    
    - name: Type checking with mypy
      run: |
        mypy --install-types --non-interactive brixa/ai/registry
    
    - name: Run tests
      run: |
        pytest tests/ai/registry -v --cov=brixa.ai.registry --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}

  # Separate job for integration tests that require more resources
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[test]
        pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
    
    - name: Run integration tests
      run: |
        pytest tests/ai/registry/test_registry_integration.py -v --cov=brixa.ai.registry --cov-append --cov-report=xml
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration
        name: codecov-integration

  # Documentation build check
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install documentation dependencies
      run: |
        pip install sphinx sphinx-rtd-theme sphinx-autodoc-typehints
    
    - name: Build documentation
      run: |
        cd docs
        make html
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/_build/html
        retention-days: 1
